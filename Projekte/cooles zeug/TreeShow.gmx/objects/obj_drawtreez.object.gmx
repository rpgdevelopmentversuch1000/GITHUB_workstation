<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grid = ds_grid_create(2,0); // FIRST COLUMN is tree ID SECOND IS LAYERS
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_grid_destroy(grid);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(ds_grid_height(grid) &gt; 0){// If one or more treez is submitting it's ID, and LAYERS

var teez;
teez = ds_grid_height(grid); //storing this for simplicity

var topheight;
topheight = ds_grid_get_max(grid, 1, 0, 1, ds_grid_height(grid)); //what is the highest layer a tree has submitted it has



for(i=1;i&lt;topheight+1;i++;){ // work our way up the layers one by one

for(ii=0;ii&lt;teez;ii++;){  //check trees in list to see if they have a sprite on this layer


if( ds_grid_get(grid,0,ii) != 0){ // double check that we haven't been marked for removal
if(ds_grid_get(grid,0,ii).LAYERS &gt;= i){ // is this tree even as high as the layer we are checking to draw?

var leafsize;

leafsize = 0.2+ (abs(ds_grid_get(grid,0,ii).LAYERS-i)*0.1);

var dirz,new_x,new_y,diz;
dirz = point_direction(view_xview[0]+(view_wview[0]*0.5),view_yview[0]+(view_hview[0]*0.5),ds_grid_get(grid,0,ii).x,ds_grid_get(grid,0,ii).y);// direction from centerview to tree base
diz = point_distance(view_xview[0]+(view_wview[0]*0.5),view_yview[0]+(view_hview[0]*0.5),ds_grid_get(grid,0,ii).x,ds_grid_get(grid,0,ii).y); // distance from centerscreen to tree base

new_x = ds_grid_get(grid,0,ii).x+lengthdir_x(i*(diz*0.04),dirz); // extend out at that direction, a distance that is determined based off a combination of distance to center and what layer we are on
new_y = ds_grid_get(grid,0,ii).y+lengthdir_y(i*(diz*0.04),dirz);

draw_sprite_ext(spr_tree,0,new_x,new_y,leafsize,leafsize,0+ds_grid_get(grid,0,ii).addang[i],c_white,1); // the angle is grabbed from the random local array we define for each trunk

}


}


}




}

ds_grid_sort(grid,0,false); // put the ones to be removed at the bottom of the list
if(ds_grid_get(grid,0,ds_grid_height(grid)-1) == 0 and ds_grid_height(grid) &gt; 1){ // if the very bottom one is to be removed
ds_grid_resize(grid,ds_grid_width(grid),ds_grid_height(grid)-1);// remove it
}



}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
